package com.treeliked.darkme2.dao;

import java.util.List;

import com.treeliked.darkme2.model.domain.IBaseFile;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Component;

@Mapper
@Component
public interface FileMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated Tue Dec 18 18:09:49 CST 2018
     */
    @Delete({
            "delete from file",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated Tue Dec 18 18:09:49 CST 2018
     */
    @Insert({
            "insert into file (id, file_name, ",
            "file_size, file_bring_id, ",
            "file_bucket_id, file_save_days, ",
            "file_attach, file_post_author, ",
            "file_destination, file_post_date)",
            "values (#{id,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, ",
            "#{fileSize,jdbcType=VARCHAR}, #{fileBringId,jdbcType=VARCHAR}, ",
            "#{fileBucketId,jdbcType=VARCHAR}, #{fileSaveDays,jdbcType=INTEGER}, ",
            "#{fileAttach,jdbcType=VARCHAR}, #{filePostAuthor,jdbcType=VARCHAR}, ",
            "#{fileDestination,jdbcType=VARCHAR}, #{filePostDate,jdbcType=TIMESTAMP})"
    })
    int insert(IBaseFile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated Tue Dec 18 18:09:49 CST 2018
     */
    @Select({
            "select",
            "id, file_name, file_size, file_bring_id, file_bucket_id, file_save_days, file_attach, ",
            "file_post_author, file_destination, file_post_date",
            "from file",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "file_name", property = "fileName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_size", property = "fileSize", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bring_id", property = "fileBringId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bucket_id", property = "fileBucketId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_save_days", property = "fileSaveDays", jdbcType = JdbcType.INTEGER),
            @Result(column = "file_attach", property = "fileAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_author", property = "filePostAuthor", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_destination", property = "fileDestination", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_date", property = "filePostDate", jdbcType = JdbcType.TIMESTAMP)
    })
    IBaseFile selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated Tue Dec 18 18:09:49 CST 2018
     */
    @Select({
            "select",
            "id, file_name, file_size, file_bring_id, file_bucket_id, file_save_days, file_attach, ",
            "file_post_author, file_destination, file_post_date",
            "from file"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "file_name", property = "fileName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_size", property = "fileSize", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bring_id", property = "fileBringId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bucket_id", property = "fileBucketId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_save_days", property = "fileSaveDays", jdbcType = JdbcType.INTEGER),
            @Result(column = "file_attach", property = "fileAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_author", property = "filePostAuthor", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_destination", property = "fileDestination", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_date", property = "filePostDate", jdbcType = JdbcType.TIMESTAMP)
    })
    List<IBaseFile> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table file
     *
     * @mbg.generated Tue Dec 18 18:09:49 CST 2018
     */
    @Update({
            "update file",
            "set file_name = #{fileName,jdbcType=VARCHAR},",
            "file_size = #{fileSize,jdbcType=VARCHAR},",
            "file_bring_id = #{fileBringId,jdbcType=VARCHAR},",
            "file_bucket_id = #{fileBucketId,jdbcType=VARCHAR},",
            "file_save_days = #{fileSaveDays,jdbcType=INTEGER},",
            "file_attach = #{fileAttach,jdbcType=VARCHAR},",
            "file_post_author = #{filePostAuthor,jdbcType=VARCHAR},",
            "file_destination = #{fileDestination,jdbcType=VARCHAR},",
            "file_post_date = #{filePostDate,jdbcType=TIMESTAMP}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(IBaseFile record);


    /**
     * 生成不重复的文件编号
     *
     * @return 文件编号
     * @throws Exception 抛出所有异常
     */
    @Select("select grfn();")
    String getFileRandomNo() throws Exception;


    /**
     * 查找指定编号的文件
     *
     * @param bringNo 文件编号
     * @return file model
     * @throws Exception 抛出所有异常
     */
    @Select({
            "select",
            "id, file_name, file_size, file_bring_id, file_bucket_id, file_save_days, file_attach, ",
            "file_post_author, file_destination, file_post_date",
            "from file",
            "where file_bring_id = #{bringNo,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "file_name", property = "fileName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_size", property = "fileSize", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bring_id", property = "fileBringId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bucket_id", property = "fileBucketId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_save_days", property = "fileSaveDays", jdbcType = JdbcType.INTEGER),
            @Result(column = "file_attach", property = "fileAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_author", property = "filePostAuthor", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_destination", property = "fileDestination", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_date", property = "filePostDate", jdbcType = JdbcType.TIMESTAMP)
    })
    IBaseFile bringFileOut(@Param("bringNo") String bringNo) throws Exception;


    /**
     * 查询用户的文件
     *
     * @param username 用户名
     * @return all file
     * @throws Exception 异常
     */
    @Select({
            "select",
            "id, file_name, file_size, file_bring_id, file_bucket_id, file_save_days, file_attach, ",
            "file_post_author, file_destination, file_post_date",
            "from file",
            "where file_post_author = #{name,jdbcType=VARCHAR} or file_destination = #{name,jdbcType=VARCHAR} order by file_post_date desc"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "file_name", property = "fileName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_size", property = "fileSize", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bring_id", property = "fileBringId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bucket_id", property = "fileBucketId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_save_days", property = "fileSaveDays", jdbcType = JdbcType.INTEGER),
            @Result(column = "file_attach", property = "fileAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_author", property = "filePostAuthor", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_destination", property = "fileDestination", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_date", property = "filePostDate", jdbcType = JdbcType.TIMESTAMP)
    })
    List<IBaseFile> getFileByUser(@Param("name") String username) throws Exception;


    /**
     * 根据关键字查询文件
     *
     * @param key 关键字
     * @return all file
     * @throws Exception 异常
     */
    @Select({
            "select",
            "id, file_name, file_size, file_bring_id, file_bucket_id, file_save_days, file_attach, ",
            "file_post_author, file_destination, file_post_date",
            "from file",
            "where file_name like '%#{key}%' or file_attach like '%#{key}%' or file_name like '%#{key}%' or file_name like '%#{key}%'"
                    + "file_destination = #{name,"
                    + "jdbcType=VARCHAR}"
                    + " order by "
                    + "file_post_date desc"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "file_name", property = "fileName", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_size", property = "fileSize", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bring_id", property = "fileBringId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_bucket_id", property = "fileBucketId", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_save_days", property = "fileSaveDays", jdbcType = JdbcType.INTEGER),
            @Result(column = "file_attach", property = "fileAttach", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_author", property = "filePostAuthor", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_destination", property = "fileDestination", jdbcType = JdbcType.VARCHAR),
            @Result(column = "file_post_date", property = "filePostDate", jdbcType = JdbcType.TIMESTAMP)
    })
    List<IBaseFile> selectByKey(@Param("key") String key) throws Exception;


    List<IBaseFile> selectByPublic();
}